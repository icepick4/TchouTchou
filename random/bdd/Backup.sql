--------------------------------------------------------
--  Fichier créé - mardi-janvier-10-2023   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence DISCUSSION_SUPPORT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "TCHOU"."DISCUSSION_SUPPORT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 3 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence USER_DATA_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "TCHOU"."USER_DATA_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 181 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Table ADVERTISEMENT
--------------------------------------------------------

  CREATE TABLE "TCHOU"."ADVERTISEMENT" 
   (	"ID_ADD" NUMBER, 
	"TITLE_ADD" VARCHAR2(100 BYTE), 
	"DESC_ADD" VARCHAR2(1000 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ALERT
--------------------------------------------------------

  CREATE TABLE "TCHOU"."ALERT" 
   (	"TRAVEL_ID" NUMBER(*,0), 
	"ALERT_TYPE_ID" NUMBER(*,0), 
	"ALERT_DATE" TIMESTAMP (6) DEFAULT SYSDATE, 
	"ALERT_MESSAGE" VARCHAR2(255 BYTE), 
	"ALERT_LOCATION" VARCHAR2(255 BYTE), 
	"ALERT_STATUS" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ALERT_TYPE
--------------------------------------------------------

  CREATE TABLE "TCHOU"."ALERT_TYPE" 
   (	"ALERT_TYPE_ID" NUMBER(*,0), 
	"ALERT_TYPE_TIME" NUMBER(*,0), 
	"ALERT_TYPE_LABEL" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CITY
--------------------------------------------------------

  CREATE TABLE "TCHOU"."CITY" 
   (	"CITY_ID" NUMBER(*,0), 
	"COUNTRY_ID" NUMBER(*,0), 
	"REGION_ID" NUMBER(*,0), 
	"POSTAL" NUMBER(*,0), 
	"CITY_NAME" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table COMPANY
--------------------------------------------------------

  CREATE TABLE "TCHOU"."COMPANY" 
   (	"COMPANY_ID" NUMBER(*,0), 
	"COMPANY_NAME" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table COUNTRY
--------------------------------------------------------

  CREATE TABLE "TCHOU"."COUNTRY" 
   (	"COUNTRY_ID" NUMBER(*,0), 
	"COUNTRY_NAME" VARCHAR2(255 BYTE), 
	"COUNTRY_LABEL" VARCHAR2(2 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DELTA_TIME_STATION
--------------------------------------------------------

  CREATE TABLE "TCHOU"."DELTA_TIME_STATION" 
   (	"START_STATION_ID" NUMBER(*,0), 
	"END_STATION_ID" NUMBER(*,0), 
	"DELTA_TIME" NUMBER(*,0), 
	"PRICE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DISCUSSION
--------------------------------------------------------

  CREATE TABLE "TCHOU"."DISCUSSION" 
   (	"DISCUSSION_ID" NUMBER(*,0), 
	"DISCUSSION_SUBJECT" VARCHAR2(255 BYTE), 
	"USER_ID" NUMBER(*,0) DEFAULT NULL, 
	"USER_MAIL" VARCHAR2(255 BYTE) DEFAULT NULL, 
	"USER_PHONE" VARCHAR2(10 BYTE) DEFAULT NULL, 
	"USER_LASTNAME" VARCHAR2(255 BYTE) DEFAULT NULL, 
	"USER_FIRSTNAME" VARCHAR2(255 BYTE) DEFAULT NULL, 
	"CREATION_TIME" TIMESTAMP (6) DEFAULT SYSDATE, 
	"DESTINATION_ID" NUMBER, 
	"STATUS" NUMBER DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DRIVER
--------------------------------------------------------

  CREATE TABLE "TCHOU"."DRIVER" 
   (	"DRIVER_ID" NUMBER(*,0), 
	"USER_ID" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DRIVER_ABILITY
--------------------------------------------------------

  CREATE TABLE "TCHOU"."DRIVER_ABILITY" 
   (	"DRIVER_ID" NUMBER(*,0), 
	"TRAIN_TYPE_ID" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table EMPLOYEE_CATEGORIE
--------------------------------------------------------

  CREATE TABLE "TCHOU"."EMPLOYEE_CATEGORIE" 
   (	"EMPLOYEE_CATEGORIE_ID" NUMBER(*,0), 
	"EMPLOYEE_CATEGORIE_LABEL" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table EMPLOYEES_DATA
--------------------------------------------------------

  CREATE TABLE "TCHOU"."EMPLOYEES_DATA" 
   (	"USER_ID" NUMBER(*,0), 
	"EMPLOYEE_ACCESS" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table LINE
--------------------------------------------------------

  CREATE TABLE "TCHOU"."LINE" 
   (	"LINE_ID" NUMBER(*,0), 
	"START_STATION_ID" NUMBER(*,0), 
	"END_STATION_ID" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table LINE_STOP
--------------------------------------------------------

  CREATE TABLE "TCHOU"."LINE_STOP" 
   (	"LINE_ID" NUMBER(*,0), 
	"STATION_ID" NUMBER(*,0), 
	"ORDER_STOP" NUMBER(*,0), 
	"DURATION_TIME" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table MESSAGE
--------------------------------------------------------

  CREATE TABLE "TCHOU"."MESSAGE" 
   (	"DISCUSSION_ID" NUMBER(*,0), 
	"MESSAGE_TIME" TIMESTAMP (6) DEFAULT SYSDATE, 
	"MESSAGE_CONTENT" VARCHAR2(1000 BYTE), 
	"SENDER_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PLATFORM
--------------------------------------------------------

  CREATE TABLE "TCHOU"."PLATFORM" 
   (	"PLATFORM_LETTER" VARCHAR2(1 BYTE), 
	"TERMINAL_ID" NUMBER(*,0), 
	"STATION_ID" NUMBER(*,0), 
	"PLATFORM_STATUS" NUMBER(*,0) DEFAULT 0, 
	"PLATFORM_UTILISATION" NUMBER(*,0) DEFAULT 0, 
	"PLATFORM_USER" NUMBER(*,0), 
	"PLATFORM_LENGTH" FLOAT(126)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table REGION
--------------------------------------------------------

  CREATE TABLE "TCHOU"."REGION" 
   (	"REGION_ID" NUMBER(*,0), 
	"COUNTRY_ID" NUMBER(*,0), 
	"REGION_NAME" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table STATION
--------------------------------------------------------

  CREATE TABLE "TCHOU"."STATION" 
   (	"STATION_ID" NUMBER(*,0), 
	"CITY_ID" NUMBER(*,0), 
	"STATION_NAME" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TICKET
--------------------------------------------------------

  CREATE TABLE "TCHOU"."TICKET" 
   (	"USER_ID" NUMBER(*,0), 
	"TRAVEL_ID" NUMBER(*,0), 
	"START_STATION_ID" NUMBER(*,0), 
	"END_STATION_ID" NUMBER(*,0), 
	"PLACE_ID" NUMBER, 
	"FIRSTNAME" VARCHAR2(100 BYTE), 
	"LASTNAME" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TRAIN
--------------------------------------------------------

  CREATE TABLE "TCHOU"."TRAIN" 
   (	"TRAIN_ID" NUMBER(*,0), 
	"TRAIN_TYPE_ID" NUMBER(*,0), 
	"TRAIN_STATUS_ID" NUMBER(*,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TRAIN_ETA
--------------------------------------------------------

  CREATE TABLE "TCHOU"."TRAIN_ETA" 
   (	"TRAVEL_ID" NUMBER(38,0), 
	"TO_SATION" NUMBER(38,0), 
	"ETA" INTERVAL DAY (2) TO SECOND (6), 
	"CODE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TRAIN_STATUS
--------------------------------------------------------

  CREATE TABLE "TCHOU"."TRAIN_STATUS" 
   (	"TRAIN_STATUS_ID" NUMBER(*,0), 
	"TRAIN_STATUS_LABEL" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TRAIN_TYPE
--------------------------------------------------------

  CREATE TABLE "TCHOU"."TRAIN_TYPE" 
   (	"TRAIN_TYPE_ID" NUMBER(*,0), 
	"TRAIN_TYPE_LABEL" VARCHAR2(255 BYTE), 
	"TRAIN_CAPACITY" NUMBER(*,0), 
	"TRAIN_SPEED" NUMBER(*,0), 
	"TRAIN_LENGTH" FLOAT(126)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TRAVEL
--------------------------------------------------------

  CREATE TABLE "TCHOU"."TRAVEL" 
   (	"TRAVEL_ID" NUMBER(*,0), 
	"LINE_ID" NUMBER(*,0), 
	"TRAIN_ID" NUMBER(*,0), 
	"DRIVER_ID" NUMBER(*,0), 
	"START_TIME" TIMESTAMP (6), 
	"LATE_TIME" NUMBER(*,0), 
	"PRICE" NUMBER(5,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TRAVEL_TO_UPDATE
--------------------------------------------------------

  CREATE GLOBAL TEMPORARY TABLE "TCHOU"."TRAVEL_TO_UPDATE" 
   (	"TRAVEL_ID" NUMBER(8,0)
   ) ON COMMIT DELETE ROWS ;
--------------------------------------------------------
--  DDL for Table USER_CATEGORIE
--------------------------------------------------------

  CREATE TABLE "TCHOU"."USER_CATEGORIE" 
   (	"USER_CATEGORIE_ID" NUMBER(*,0), 
	"USER_CATEGORIE_LABEL" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table USER_DATA
--------------------------------------------------------

  CREATE TABLE "TCHOU"."USER_DATA" 
   (	"USER_ID" NUMBER(*,0), 
	"USER_MAIL" VARCHAR2(255 BYTE), 
	"USER_PHONE" VARCHAR2(10 BYTE), 
	"USER_PASSWORD" VARCHAR2(255 BYTE), 
	"USER_LASTNAME" VARCHAR2(255 BYTE), 
	"USER_FIRSTNAME" VARCHAR2(255 BYTE), 
	"USER_CATEGORIE_ID" NUMBER(*,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for View ARRIVAL_TO_STATION
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "TCHOU"."ARRIVAL_TO_STATION" ("TRAVEL_ID", "STATION_ID", "MIN", "ARRIVAL_TIME", "DEPARTURE_TIME") AS 
  select TRAVEL_ID, STATION_ID, 
      getTimeArrival(
        ls.LINE_ID, 
        (select STATION_ID from LINE_STOP ls2 where ls2.LINE_ID=t.LINE_ID AND ls2.ORDER_STOP = 1), 
        ls.STATION_ID,
        (select SPEED_COEFFICIENT from TRAIN_ID_SPEED_COEFFICIENT tisc where tisc.TRAVEL_ID = t.TRAVEL_ID)
      ) as MIN, 
      TO_TIMESTAMP(
      to_char(
      t.START_TIME + (1/1440)*getTimeArrival(
            ls.LINE_ID, 
            (select STATION_ID from LINE_STOP ls2 where ls2.LINE_ID=t.LINE_ID AND ls2.ORDER_STOP = 1), 
            ls.STATION_ID,
            (select SPEED_COEFFICIENT from TRAIN_ID_SPEED_COEFFICIENT tisc where tisc.TRAVEL_ID = t.TRAVEL_ID) 
            ),'DD/MM/YY HH24:MI:SS'),'DD/MM/YY HH24:MI:SS') as ARRIVAL_TIME,
      TO_TIMESTAMP(
      to_char(
      t.START_TIME + (1/1440)*getTimeArrival(
            ls.LINE_ID, 
            (select STATION_ID from LINE_STOP ls2 where ls2.LINE_ID=t.LINE_ID AND ls2.ORDER_STOP = 1), 
            ls.STATION_ID,
            (select SPEED_COEFFICIENT from TRAIN_ID_SPEED_COEFFICIENT tisc where tisc.TRAVEL_ID = t.TRAVEL_ID)
            ) + (1/1440)*GETTIMESTOP(ls.LINE_ID,ls.STATION_ID),'DD/MM/YY HH24:MI:SS'),'DD/MM/YY HH24:MI:SS') as DEPARTURE_TIME
      from TRAVEL t, LINE_STOP ls where t.LINE_ID = ls.LINE_ID ORDER BY TRAVEL_ID,ORDER_STOP ASC
;
--------------------------------------------------------
--  DDL for View BETTER_TRAIN_ETA
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "TCHOU"."BETTER_TRAIN_ETA" ("TRAVEL_ID", "TRAIN_ID", "LINE_ID", "START_TIME", "TO_SATION", "ETA", "CODE", "SPEED_COEFFICIENT") AS 
  SELECT te.TRAVEL_ID , t.TRAIN_ID, t.LINE_ID, t.START_TIME , te.TO_SATION , te.ETA , te.CODE , tisc.SPEED_COEFFICIENT 
  FROM tchou.TRAIN_ETA te , tchou.TRAVEL t, tchou.TRAIN_ID_SPEED_COEFFICIENT tisc 
  WHERE te.TRAVEL_ID = t.TRAVEL_ID 
  AND tisc.TRAVEL_ID = te.TRAVEL_ID
  AND te.code <> 3
;
--------------------------------------------------------
--  DDL for View EMPTYSEATATSTOP
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "TCHOU"."EMPTYSEATATSTOP" ("TRAVEL_ID", "LINE_ID", "START_STATION_ID", "NEXT_STATION_ID", "EMPTYSEATS") AS 
  SELECT t.TRAVEL_ID,t.LINE_ID,ls.STATION_ID AS "START_STATION_ID",ls2.STATION_ID AS "NEXT_STATION_ID", getEmptySeatsBetweenTwoStation(t.TRAVEL_ID,ls.STATION_ID, ls2.STATION_ID) AS "EMPTYSEATS" FROM LINE_STOP ls INNER JOIN TRAVEL t ON ls.LINE_ID = t.LINE_ID INNER JOIN LINE_STOP ls2 ON ls2.LINE_ID = ls.LINE_ID WHERE ls2.ORDER_STOP > ls.ORDER_STOP ORDER BY TRAVEL_ID,ls.ORDER_STOP,ls2.ORDER_STOP
;
--------------------------------------------------------
--  DDL for View INCOMING_TRAIN_WITH_PLATFORM
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "TCHOU"."INCOMING_TRAIN_WITH_PLATFORM" ("TRAVEL_ID", "LINE_ID", "TRAIN_ID", "LATE_TIME", "ARRIVAL_TIME", "DESTINATION", "PLATFORM", "STATION_ID") AS 
  SELECT TRAVEL.TRAVEL_ID, TRAVEL.LINE_ID, TRAVEL.TRAIN_ID, 
nvl(TRAVEL.LATE_TIME,0) as LATE_TIME, ARRIVAL_TIME, STATION_NAME AS DESTINATION ,
getTrainPlatoform(TRAIN_ID,LINE_STOP.STATION_ID ) as PLATFORM,
LINE_STOP.STATION_ID as STATION_ID
FROM TRAVEL 
        INNER JOIN LINE_STOP ON TRAVEL.LINE_ID = LINE_STOP.LINE_ID 
        INNER JOIN LINE ON TRAVEL.LINE_ID = LINE.LINE_ID
        INNER JOIN STATION ON LINE.START_STATION_ID = STATION.STATION_ID
        INNER JOIN ARRIVAL_TO_STATION ON TRAVEL.TRAVEL_ID = ARRIVAL_TO_STATION.TRAVEL_ID
        WHERE LINE_STOP.STATION_ID != LINE.START_STATION_ID 
        AND ARRIVAL_TO_STATION.STATION_ID = LINE_STOP.STATION_ID
        --AND ARRIVAL_TIME >= SYSDATE
        --AND ARRIVAL_TIME <= SYSDATE + 1/48
        --AND LINE_STOP.STATION_ID = 14
        ORDER BY ARRIVAL_TIME ASC
;
--------------------------------------------------------
--  DDL for View NB_AT_STOP
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "TCHOU"."NB_AT_STOP" ("COUNTED_AT_STOP", "REALLY_AT_STOP") AS 
  SELECT (SELECT COUNT(p.PLATFORM_UTILISATION)  FROM
 TCHOU.PLATFORM p WHERE  p.PLATFORM_UTILISATION = 1) AS Counted_At_Stop, 
 ( SELECT
COUNT(te.TRAVEL_ID) 
FROM TCHOU.TRAIN_ETA te 
WHERE TE.CODE =2  ) AS Really_At_Stop
FROM dual

;
--------------------------------------------------------
--  DDL for View TRAIN_ID_SPEED_COEFFICIENT
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "TCHOU"."TRAIN_ID_SPEED_COEFFICIENT" ("TRAVEL_ID", "TRAIN_ID", "SPEED_COEFFICIENT") AS 
  SELECT t.TRAVEL_ID , t2.TRAIN_ID , TTSC.SPEED_COEFFICIENT  FROM TCHOU.TRAVEL t,TCHOU.TRAIN t2 , TCHOU.TRAIN_TYPE_SPEED_COEFFICIENT ttsc  
  WHERE t.TRAIN_ID = t2.TRAIN_ID  AND t2.TRAIN_TYPE_ID = TTSC.TRAIN_TYPE_ID 
;
--------------------------------------------------------
--  DDL for View TRAIN_TYPE_SPEED_COEFFICIENT
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "TCHOU"."TRAIN_TYPE_SPEED_COEFFICIENT" ("TRAIN_TYPE_ID", "SPEED_COEFFICIENT") AS 
  SELECT tt.TRAIN_TYPE_ID, 2 - (tt.TRAIN_SPEED / (SELECT max(tt2.TRAIN_SPEED) FROM
   tchou.TRAIN_TYPE tt2)) AS SPEED_COEFFICIENT FROM tchou.TRAIN_TYPE tt 


;
--------------------------------------------------------
--  DDL for View TRAVEL_PRICE
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "TCHOU"."TRAVEL_PRICE" ("TRAVEL_ID", "DAYS_LEFT", "PRICE") AS 
  SELECT  TRAVEL_ID , trunc(START_TIME) - trunc(sysdate) AS DAYS_LEFT, greatest( ROUND(-0.7 * (trunc(START_TIME) - trunc(sysdate)) + 15 + PRICE ), PRICE) AS PRICE FROM Tchou.TRAVEL t 


;
--------------------------------------------------------
--  DDL for View TRAVEL_STATUS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "TCHOU"."TRAVEL_STATUS" ("MAX_ID") AS 
  SELECT max(TRAVEL_ID)  MAX_ID
FROM TRAVEL
;
--------------------------------------------------------
--  DDL for View TRAVEL_WITH_ET
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "TCHOU"."TRAVEL_WITH_ET" ("TIME_MIN", "END_TIME", "TRAVEL_ID") AS 
  select sum( 
coalesce(
getDTSF(ls.station_id,
(select station_id from LINE_STOP where ORDER_STOP = nvl(ls.ORDER_STOP -1, 0) AND LINE_ID=ls.LINE_ID ),
(select SPEED_COEFFICIENT from TRAIN_ID_SPEED_COEFFICIENT tisc where tisc.TRAVEL_ID = t.TRAVEL_ID)
)
+ ls.duration_time,0) ) as TIME_MIN, 
TO_TIMESTAMP(
to_char(t.START_TIME + (.000694 * 
sum( 
coalesce(
getDTSF(ls.station_id,
(select station_id from LINE_STOP where ORDER_STOP = nvl(ls.ORDER_STOP -1, 0) AND LINE_ID=ls.LINE_ID ),
(select SPEED_COEFFICIENT from TRAIN_ID_SPEED_COEFFICIENT tisc where tisc.TRAVEL_ID = t.TRAVEL_ID))
+ ls.duration_time,0) )), 'DD/MM/YY HH24:MI:SS'),'DD/MM/YY HH24:MI:SS') as END_TIME, 

t.TRAVEL_ID from LINE_STOP ls, TRAVEL t
where  ls.line_id=t.line_id GROUP BY t.TRAVEL_ID, t.START_TIME
;
--------------------------------------------------------
--  DDL for Index ADVERTISEMENT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."ADVERTISEMENT_PK" ON "TCHOU"."ADVERTISEMENT" ("ID_ADD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_ALERT
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_ALERT" ON "TCHOU"."ALERT" ("TRAVEL_ID", "ALERT_DATE", "ALERT_TYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_ALERT_TYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_ALERT_TYPE" ON "TCHOU"."ALERT_TYPE" ("ALERT_TYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_CITY_ID
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_CITY_ID" ON "TCHOU"."CITY" ("CITY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_COMPANY
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_COMPANY" ON "TCHOU"."COMPANY" ("COMPANY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_COUNTRY
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_COUNTRY" ON "TCHOU"."COUNTRY" ("COUNTRY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_DELTA
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_DELTA" ON "TCHOU"."DELTA_TIME_STATION" ("START_STATION_ID", "END_STATION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_DISCUSSION
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_DISCUSSION" ON "TCHOU"."DISCUSSION" ("DISCUSSION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_DRIVER
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_DRIVER" ON "TCHOU"."DRIVER" ("DRIVER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_DRIVER_ABILITY
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_DRIVER_ABILITY" ON "TCHOU"."DRIVER_ABILITY" ("DRIVER_ID", "TRAIN_TYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_EMPLOYEE
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_EMPLOYEE" ON "TCHOU"."EMPLOYEES_DATA" ("USER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_EMPLOYEE_CATEGORIE
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_EMPLOYEE_CATEGORIE" ON "TCHOU"."EMPLOYEE_CATEGORIE" ("EMPLOYEE_CATEGORIE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_LINE
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_LINE" ON "TCHOU"."LINE" ("LINE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_LINE_STOP
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_LINE_STOP" ON "TCHOU"."LINE_STOP" ("LINE_ID", "ORDER_STOP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_PLATFORM
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_PLATFORM" ON "TCHOU"."PLATFORM" ("PLATFORM_LETTER", "TERMINAL_ID", "STATION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_REGION_ID
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_REGION_ID" ON "TCHOU"."REGION" ("COUNTRY_ID", "REGION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_STATION_ID
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_STATION_ID" ON "TCHOU"."STATION" ("STATION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_TRAIN
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_TRAIN" ON "TCHOU"."TRAIN" ("TRAIN_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_TRAIN_ETA
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_TRAIN_ETA" ON "TCHOU"."TRAIN_ETA" ("TRAVEL_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_TRAIN_STATUS
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_TRAIN_STATUS" ON "TCHOU"."TRAIN_STATUS" ("TRAIN_STATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_TRAIN_TYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_TRAIN_TYPE" ON "TCHOU"."TRAIN_TYPE" ("TRAIN_TYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_TRAVEL
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_TRAVEL" ON "TCHOU"."TRAVEL" ("TRAVEL_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_USER
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_USER" ON "TCHOU"."USER_DATA" ("USER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_USER_CATEGORIE
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."PK_USER_CATEGORIE" ON "TCHOU"."USER_CATEGORIE" ("USER_CATEGORIE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TICKET_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TCHOU"."TICKET_PK" ON "TCHOU"."TICKET" ("USER_ID", "TRAVEL_ID", "FIRSTNAME", "LASTNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger ALERT_LATE_TRG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TCHOU"."ALERT_LATE_TRG" 
AFTER INSERT ON ALERT
FOR EACH ROW
DECLARE
v_late NUMBER;
v_alert_late NUMBER;
BEGIN
    SELECT LATE_TIME INTO v_late FROM TRAVEL WHERE TRAVEL_ID = :new.travel_id;
    SELECT ALERT_TYPE_TIME INTO v_alert_late FROM ALERT_TYPE WHERE alert_type_id = :new.alert_type_id;
    IF (v_late IS NOT NULL) THEN
        UPDATE TRAVEL SET LATE_TIME = LATE_TIME+v_alert_late WHERE TRAVEL_ID = :new.travel_id;
    ELSE
        UPDATE TRAVEL SET LATE_TIME = v_alert_late WHERE TRAVEL_ID = :new.travel_id;
    END IF;
END;
/
ALTER TRIGGER "TCHOU"."ALERT_LATE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DISCUSSION_SUPPORT_TRG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TCHOU"."DISCUSSION_SUPPORT_TRG" 
BEFORE INSERT ON "DISCUSSION"
FOR EACH ROW
 WHEN (new.DISCUSSION_ID IS NULL) BEGIN
  SELECT DISCUSSION_SUPPORT_SEQ.NEXTVAL
  INTO   :new.DISCUSSION_ID
  FROM   dual;
END;
/
ALTER TRIGGER "TCHOU"."DISCUSSION_SUPPORT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger END_TIME_TO_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TCHOU"."END_TIME_TO_UPDATE" 
AFTER INSERT OR UPDATE ON TRAVEL
DECLARE
CURSOR c_travel IS SELECT * FROM TRAVEL_TO_UPDATE;
BEGIN
FOR v_travel in c_travel LOOP
    UPDATE TRAVEL SET end_time = start_time + (1/1440)*ENDTIMETRAVEL(v_travel.travel_id) WHERE TRAVEL_ID = v_travel.travel_id; 
END LOOP;
END;
/
ALTER TRIGGER "TCHOU"."END_TIME_TO_UPDATE" DISABLE;
--------------------------------------------------------
--  DDL for Trigger ENDTIMETRAVEL
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TCHOU"."ENDTIMETRAVEL" 
AFTER INSERT OR UPDATE ON TRAVEL
FOR EACH ROW
BEGIN
INSERT INTO travel_to_update VALUES(:new.travel_id);
END;
/
ALTER TRIGGER "TCHOU"."ENDTIMETRAVEL" DISABLE;
--------------------------------------------------------
--  DDL for Trigger EXCEPTIONTICKET
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TCHOU"."EXCEPTIONTICKET" 
BEFORE INSERT ON Tchou.TICKET
FOR EACH ROW
--prevent having negative tickets for a travel
DECLARE 
    v_nb_tickets number(10);
BEGIN
    SELECT INTO v_nb_tickets COUNT(*) FROM Tchou.TICKET WHERE TRAVEL_ID = :NEW.TRAVEL_ID;
    IF v_nb_tickets < 0 THEN
        RAISE_APPLICATION_ERROR(-20001, 'You cannot have negative tickets for a travel');
    END IF;
END;
/
ALTER TRIGGER "TCHOU"."EXCEPTIONTICKET" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRAVEL_AI
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TCHOU"."TRAVEL_AI" 
BEFORE INSERT  ON TRAVEL
FOR EACH ROW
DECLARE 
v_ID TRAVEL.TRAVEL_ID%TYPE ;
BEGIN 
	SELECT MAX_ID INTO v_ID FROM TRAVEL_STATUS ts ;
	IF v_ID IS NOT NULL THEN
		:new.TRAVEL_ID := v_ID+1;
	ELSE
		:new.TRAVEL_ID := 1;
	END IF;
END;
/
ALTER TRIGGER "TCHOU"."TRAVEL_AI" ENABLE;
--------------------------------------------------------
--  DDL for Trigger USER_DATA_TRG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TCHOU"."USER_DATA_TRG" 
BEFORE INSERT ON USER_DATA 
FOR EACH ROW
 WHEN (new.USER_ID IS NULL) BEGIN
  SELECT USER_DATA_SEQ.NEXTVAL
  INTO   :new.USER_ID
  FROM   dual;
END;
/
ALTER TRIGGER "TCHOU"."USER_DATA_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Procedure CHECKCODE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "TCHOU"."CHECKCODE" 
(
v_TRAVEl_ID IN TRAVEL.TRAVEL_ID%type,
ETA IN INTERVAL DAY TO second,
last_sation IN STATION.STATION_ID%type,
next_station IN STATION.STATION_ID%type,
v_new_code in NUMBER,

v_code OUT NUMBER,
v_late OUT TRAVEL.LATE_TIME%type
) AS 

v_old_code Number ;
v_res Number;
v_train_id TRAIN.TRAIN_ID%type;
v_turn_around LINE_STOP.DURATION_TIME%type;
BEGIN
v_code:= v_new_code;
v_late:= 0;
select CODE into v_old_code from TRAIN_ETA t WHERE t.TRAVEL_ID = v_TRAVEL_ID;

select TRAIN_ID into v_train_id from TRAVEL t WHERE t.TRAVEL_ID = v_TRAVEL_ID;



IF v_new_code = 1 then
   dbms_output.put_line('[CheckCode] new code vs old '||v_new_code||';'||v_old_code||';');

    dbms_output.put_line('[CheckCode] code = 1 so check if ETA '|| ETA ||' < '|| (CURRENT_TIMESTAMP-(CURRENT_TIMESTAMP -(1/1440)*(10)) ));
    IF ETA  < interval '10' minute then --(CURRENT_TIMESTAMP-(CURRENT_TIMESTAMP -(1/1440)*(10)) ) then
        dbms_output.put_line('[CheckCode] yes ');
        dbms_output.put_line('[CheckCode] code is 1 station'||next_station||' train '|| v_train_id);
        v_res := getPlatform(next_station,v_train_id);
        IF v_res = 1 then
            dbms_output.put_line('[CheckCode]1 a platofrom is free '||v_code||';'||v_res||';');
            v_code := 5;
        ELSE
            dbms_output.put_line('[CheckCode]1 no platofrom free '||v_code||';'||v_res||';');
            v_code := 4;
            END IF;
    END IF;

ELSIF v_new_code = 2  then
    dbms_output.put_line('[CheckCode] code is 2; station '||next_station||' train '|| v_train_id);
    v_res := getPlatform(next_station,v_train_id);
    IF v_res = 1 then

        v_code := 5;
         dbms_output.put_line('[CheckCode] a platofrom is free 2;');
    ELSE

        v_code := 4;
         dbms_output.put_line('[CheckCode]2 no platofrom free '||v_code||';');
    END IF;
    IF v_old_code = 5 OR v_code = 5 THEN 
        v_code := 2;
        Update PLATFORM SET PLATFORM_UTILISATION=1 WHERE STATION_ID = next_station AND PLATFORM_USER= v_train_id;

    ELSE
        v_code := 4;
        select DURATION_TIME into v_turn_around FROM LINE_STOP ls, TRAVEL t 
        where t.TRAVEL_ID = v_TRAVEl_ID AND ls.STATION_ID= next_station AND ls.LINE_ID=t.LINE_ID;
        v_late:= v_turn_around -  extract (minute   from ETA); -- add late time from WHAT ETA calculated
    END IF;
END IF;

if v_new_code <> v_code then
    dbms_output.put_line('[CheckCode] end code '||v_code||';');
end if;

END;

/
--------------------------------------------------------
--  DDL for Procedure CHECKDEPARTURE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "TCHOU"."CHECKDEPARTURE" 
(
v_TRAVEl_ID IN TRAVEL.TRAVEL_ID%type,
last_sation IN STATION.STATION_ID%type,
v_new_code in NUMBER
) AS 

v_old_code Number ;
v_res Number;
v_train_id TRAIN.TRAIN_ID%type;
BEGIN
select CODE into v_old_code from TRAIN_ETA t WHERE t.TRAVEL_ID = v_TRAVEL_ID;

select TRAIN_ID into v_train_id from TRAVEL t WHERE t.TRAVEL_ID = v_TRAVEL_ID;
--dbms_output.put_line('[CheckCode] new code vs old '||v_new_code||';'||v_old_code||';');


-- remove from platform

 IF v_old_code = 2 and  v_new_code <> 2 THEN

        v_res := popPlatform(last_sation,v_train_id);

        dbms_output.put_line('[CheckCode] remove from platfrom succes='||v_res||'; station='||last_sation||'; train='||v_train_id||';');
        dbms_output.put_line('[CheckCode] old code'||v_old_code||'; new code='||v_new_code);
    end if;
end;

/
--------------------------------------------------------
--  DDL for Procedure CLEARTICKETS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "TCHOU"."CLEARTICKETS" (
v_travel_id IN TRAVEL.TRAVEL_ID%type)
as

begin

delete from  TICKET where TRAVEL_ID = v_travel_id;

end;

/
--------------------------------------------------------
--  DDL for Procedure GETETA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "TCHOU"."GETETA" (
v_start_time IN TRAVEL.START_TIME%type,
v_delta_time IN DELTA_TIME_STATION.DELTA_TIME%type,
v_stop_duration IN LINE_STOP.DURATION_TIME%type,
v_total_time IN LINE_STOP.DURATION_TIME%type,
ETA OUT INTERVAL DAY TO second,

train_status OUT NUMBER)
AS
/* donne la procahine gare avec le temps d'arré et le code status*/
ETA_tmp INTERVAL DAY TO second;
BEGIN 
train_status := 0;
ETA := (v_start_time + (1/1440)*(v_delta_time+v_total_time))- CURRENT_TIMESTAMP;    
IF  ETA >  CURRENT_TIMESTAMP-CURRENT_TIMESTAMP then -- travel not finish
        train_status := 1; -- set to 'in movment'

        
    --END IF;
else
    dbms_output.put_line( '[GETETA] not 1 beacause 00:00>'||ETA ); 
    end if;
    -- calaculate time need with in station time
ETA_tmp := (v_start_time + (1/1440)*(v_delta_time+v_stop_duration+v_total_time))- CURRENT_TIMESTAMP;
IF  ETA_tmp >  CURRENT_TIMESTAMP-CURRENT_TIMESTAMP  AND train_status <> 1 then
    ETA := ETA_tmp;
    dbms_output.put_line( '[GETETA] code is now 2 beacause 00:00<'||ETA ); 
        train_status := 2; -- set status to stop in station
    END IF;
IF v_start_time - CURRENT_TIMESTAMP >  v_start_time- v_start_time then
train_status:=3;
end IF;


END;

/
--------------------------------------------------------
--  DDL for Procedure TIMEARRIVAL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "TCHOU"."TIMEARRIVAL" (
TRAVEL_ID_ in TRAVEL.TRAVEL_ID%type,
STATION_ID_ in STATION.STATION_ID%type,
ETA OUT TRAVEL.START_TIME%type
)as

CURSOR c_next_stop is
     select ls.station_id, ls.duration_time from LINE_STOP ls, LINE l, TRAVEl t  where t.travel_id=travel_id_ AND t.line_id=l.line_id AND l.line_id=ls.line_id ORDER BY ORDER_STOP ASC;

v_next_stop c_next_stop%rowtype;
v_last_station STATION.STATION_ID%type; 
v_turn_around LINE_STOP.DURATION_TIME%type;
v_tmp_res_getDTS LINE_STOP.DURATION_TIME%type;


begin

ETA := null;
OPEN c_next_stop; -- open cursor

FETCH c_next_stop INTO v_next_stop ;
v_last_station := v_next_stop.station_id;
v_turn_around := v_next_stop.DURATION_TIME;

dbms_output.put_line( 'start' ); 

    LOOP

    FETCH c_next_stop INTO v_next_stop ;

    IF c_next_stop%NOTFOUND THEN
    ETA := null;
    dbms_output.put_line( 'sation not found end of liste' ); 
    exit;
    END IF;

    dbms_output.put_line( 'get duration bewteenn sation '||v_last_station ||' and '||v_next_stop.station_id ); 
    v_tmp_res_getDTS := getdtsf(v_last_station,v_next_stop.station_id);
    ETA := ETA + (1/1440)*(v_tmp_res_getDTS + v_turn_around );

    v_turn_around := v_next_stop.DURATION_TIME;
    v_last_station := v_next_stop.station_id;
    IF v_next_stop.station_id = STATION_ID_ then
    dbms_output.put_line( 'station found' ); 
    exit;
    end if;

    END LOOP;

    CLOSE c_next_stop;

    /* 
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
    dbms_output.put_line( 'execpetion' ); */

    ETA := null;



end;

/
--------------------------------------------------------
--  DDL for Procedure UPDATETRAINETA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "TCHOU"."UPDATETRAINETA" 
AS
CURSOR c_next_trip is
     select TRAVEl_ID from  TRAVEl t  ORDER BY TRAVEl_ID ASC;

v_next_trip c_next_trip%rowtype;
v_st STATION.STATION_ID%TYPE;
v_ETA INTERVAL DAY TO SECOND;
v_code NUMBER;
v_existe NUMBER;
begin
    
    dbms_output.put_line('[TIME= '||CURRENT_TIMESTAMP||']');

    OPEN c_next_trip; -- open cursor
    LOOP
        FETCH c_next_trip INTO v_next_trip ;
    
        IF c_next_trip%NOTFOUND THEN
            exit;
        end if;
        --dbms_output.put_line('[TRAVEL ID='|| v_next_trip.TRAVEl_ID || ' ]'); 
    
        whereis(v_next_trip.TRAVEl_ID,v_st,v_ETA,v_code);
    
        select count(TRAVEL_ID) into v_existe FROM TRAIN_ETA where TRAVEL_ID = v_next_trip.TRAVEl_ID;
        IF v_existe = 0 THEN
            --dbms_output.put_line( '[updateTrainETA] Insert'); 
            insert into TRAIN_ETA VALUES (v_next_trip.TRAVEl_ID, v_st, v_ETA, v_code);
        ELSE
            UPDATE TRAIN_ETA SET TO_SATION = v_st, ETA = v_ETA, CODE= v_code where TRAVEL_ID = v_next_trip.TRAVEl_ID;
            --dbms_output.put_line( '[updateTrainETA] update'); 
        END IF;

     END LOOP;

    CLOSE c_next_trip;


end;

/
--------------------------------------------------------
--  DDL for Procedure WHEREIS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "TCHOU"."WHEREIS" (
travel_id_ IN TRAVEL.TRAVEL_ID%type,
next_station_id OUT STATION.STATION_ID%type,
ETA OUT INTERVAL DAY TO second,
train_status OUT NUMBER)
AS
train_id_  TRAIN.TRAIN_ID%type;
v_total_time LINE_STOP.DURATION_TIME%type;
v_last_stop_time LINE_STOP.DURATION_TIME%type;
v_start_time TRAVEL.START_TIME%type;
v_last_STATION LINE_STOP.STATION_ID%type;
v_delta_time DELTA_TIME_STATION.DELTA_TIME%type;
v_late  TRAVEL.LATE_TIME%type;
v_train_type  TRAIN.TRAIN_TYPE_ID%type;
v_coef number;
CURSOR c_next_stop is
     select ls.station_id, ls.duration_time from LINE_STOP ls, TRAVEl t  where t.travel_id=travel_id_ AND t.line_id=ls.line_id ORDER BY ORDER_STOP ASC;

v_next_stop c_next_stop%rowtype;
BEGIN 

OPEN c_next_stop; -- open cursor

FETCH c_next_stop INTO v_next_stop ;
v_last_STATION := v_next_stop.station_id;

v_last_stop_time := v_next_stop.DURATION_TIME;

train_status := 0; -- default train status is stop


select SPEED_COEFFICIENT into v_coef from TRAIN_ID_SPEED_COEFFICIENT tisc where tisc.TRAVEL_ID = travel_id_;

-- get the starting station into v_last_STATION

select nvl(LATE_TIME,0) into v_total_time FROM TRAVEL WHERE TRAVEL_ID = travel_id_;
--v_total_time :=0; -- set total time to 0 

-- get start time into v_start_time
SELECT  START_TIME  into  v_start_time FROM TRAVEL t where travel_id_ = t.travel_id ;

getETA(v_start_time,0,v_next_stop.DURATION_TIME,v_total_time,ETA, train_status);
CheckCode(travel_id_,ETA, v_last_STATION,v_last_STATION,train_status,train_status,v_late);

v_total_time := v_total_time + v_last_stop_time;
next_station_id := v_last_STATION;

IF train_status= 0 THEN -- if turn arount time for depart si good

    -------------- LOOP

    LOOP
    FETCH c_next_stop INTO v_next_stop ;

        IF c_next_stop%NOTFOUND THEN -- if no result 

            exit;
        END IF;


    -- get next sation id
    next_station_id := v_next_stop.station_id;

    
    --dbms_output.put_line( v_last_STATION ||';' || next_station_id); 

    -- get time to this station
    v_delta_time := getDTSF(v_last_STATION,next_station_id, v_coef);
  

    getETA(v_start_time,v_delta_time,v_next_stop.DURATION_TIME,v_total_time,ETA, train_status);
    CheckCode(travel_id_,ETA, v_last_STATION,next_station_id,train_status,train_status,v_late);
    -- calculate diffrence bewteen the it shoud take and curent time
    
    

    IF  train_status = 1 OR train_status = 2 OR train_status = 3 OR train_status = 4 OR train_status = 5 then -- travel not finish or a quai
        checkDeparture(travel_id_,v_last_STATION,train_status);
        dbms_output.put_line('[TRAVEL ID='|| travel_id_ || ' ]'); 
        dbms_output.put_line('[WHEREIS][UPDATE] next station='||next_station_id||' status='||train_status);
        exit;
    END IF;

    -- add for next loop the time to go to the station with turn around
    v_total_time := v_total_time + v_next_stop.DURATION_TIME + v_delta_time;
    v_last_STATION := next_station_id;

    END LOOP;

    CLOSE c_next_stop;

    END iF;

    IF train_status = 0 THEN
        dbms_output.put_line( '[WHEREIS][LINE FINISH] update start time to 30 for travel id '||travel_id_); 
        UPDATE TRAVEL SET START_TIME=START_TIME+ interval '30' day, LATE_TIME = null  where TRAVEL_ID = travel_id_;
        Update PLATFORM SET PLATFORM_USER= NULL, PLATFORM_UTILISATION=0 WHERE PLATFORM_USER =train_id_;
        train_status := 3;
        checkDeparture(travel_id_,v_last_STATION,train_status);
        clearTickets(travel_id_);

        commit;

    END IF;
    if v_late > 0 then

         update TRAVEL  SET LATE_TIME = nvl(LATE_TIME,0) + v_late WHERE TRAVEL_ID = travel_id_;
          commit;
     end if;

    EXCEPTION
    WHEN NO_DATA_FOUND THEN
    next_station_id := null;
ETA := null;
train_status := null;


    /*

    declare
v_st STATION.STATION_ID%TYPE;
v_ETA INTERVAL DAY TO SECOND;
v_code NUMBER;
begin

	whereis(5,v_st,v_ETA,v_code);
    dbms_output.put_line('direction station '  || v_st); 
    dbms_output.put_line('ETA ' || v_ETA); 
    dbms_output.put_line('code status ' || v_code); 
    --dbms_output.put_line( extract (hour   from v_ETA)||':'||extract (minute    from v_ETA)); 
    --dbms_output.put_line(CURRENT_TIMESTAMP); 

end;



    declare
v_delta_time DELTA_TIME_STATION.DELTA_TIME%type;
begin

	getDTS(1,7,v_delta_time);
    dbms_output.put_line('v_delta_time '  || v_delta_time); 


end;


set SERVEROUTPUT on;

declare


v_st STATION.STATION_ID%TYPE;
v_ETA INTERVAL DAY TO SECOND;
v_code NUMBER;
begin


	whereis(5,v_st,v_ETA,v_code);
    dbms_output.put_line('direction station '  || v_st); 
    dbms_output.put_line('ETA ' || v_ETA); 
    dbms_output.put_line('code status ' || v_code); 




end;




;*/
END;

/
--------------------------------------------------------
--  DDL for Function ENDTIMETRAVEL
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "TCHOU"."ENDTIMETRAVEL" (line_id IN NUMBER )
RETURN NUMBER IS v_sum NUMBER := 0;
v_result NUMBER;
v_timeToAdd NUMBEr;
BEGIN   
FOR v_stop IN (SELECT * FROM LINE_STOP WHERE LINE_ID = line_id AND ORDER_STOP != (SELECT MAX(ORDER_STOP) FROM LINE_STOP WHERE LINE_ID = line_id)) 
LOOP
    SELECT COUNT(*) INTO v_result FROM DELTA_TIME_STATION 
            WHERE START_STATION_ID = v_stop.STATION_ID 
            AND END_STATIOn_ID = 
            (
                SELECT STATION_ID FROM LINE_STOP 
                WHERE LINE_ID = line_id 
                AND ORDER_STOP = v_stop.order_stop +1 
            );
    IF ( v_result > 0) 
    THEN
    SELECT DELTA_TIME INTO v_timeToAdd FROM DELTA_TIME_STATION 
                    WHERE START_STATION_ID = v_stop.STATION_ID 
                    AND END_STATIOn_ID = (
                                            SELECT STATION_ID FROM LINE_STOP 
                                            WHERE LINE_ID = line_id 
                                            AND ORDER_STOP = v_stop.order_stop +1
                                        )
                    ;
    ELSE
    SELECT DELTA_TIME INTO v_timeToAdd FROM DELTA_TIME_STATION 
                    WHERE END_STATION_ID = v_stop.STATION_ID 
                    AND START_STATION_ID = (
                                            SELECT STATION_ID FROM LINE_STOP 
                                            WHERE LINE_ID = line_id 
                                            AND ORDER_STOP = v_stop.order_stop +1
                                            );

    END IF;
    v_sum := v_sum + v_timeToAdd;
    v_result := 0;
END LOOP;
RETURN (v_sum);
END;

/
--------------------------------------------------------
--  DDL for Function GETDTSF
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "TCHOU"."GETDTSF" (
v_start  DELTA_TIME_STATION.START_STATION_ID%type,
v_end   DELTA_TIME_STATION.END_STATION_ID%type,
v_coef number)
RETURN NUMBER
/* donne la durée entre 2 gare*/
as 
v_ETA  DELTA_TIME_STATION.DELTA_TIME%type;
begin
select DELTA_TIME into v_ETA from DELTA_TIME_STATION where (START_STATION_ID = v_start AND 
    END_STATION_ID = v_end) OR (START_STATION_ID =  v_end AND 
    END_STATION_ID = v_start);
    return v_ETA * v_coef;
end;

/
--------------------------------------------------------
--  DDL for Function GETEMPTYSEATSBETWEENTWOSTATION
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "TCHOU"."GETEMPTYSEATSBETWEENTWOSTATION" (v_travel_id IN NUMBER, v_first_station_id IN NUMBER, v_last_station_id IN NUMBER )
RETURN NUMBER AS
v_capacity NUMBER := 0;
v_train_capacity NUMBER := 0;
v_check NUMBER := 0;
v_toAdd NUMBER := 0;
BEGIN
SELECT TRAIN_CAPACITY INTO v_capacity FROM TRAIN_TYPE INNER JOIN TRAIN ON TRAIN.TRAIN_TYPE_ID = TRAIN_TYPE.TRAIN_TYPE_ID INNER JOIN TRAVEL ON TRAIN.TRAIN_ID = TRAVEL.TRAIN_ID WHERE TRAVEL_ID = v_travel_id;
FOR c_stationToCheck IN (SELECT * FROM LINE_STOP WHERE LINE_ID = (SELECT LINE_ID FROM TRAVEL WHERE TRAVEL_ID = v_travel_id))
LOOP
    IF c_stationToCheck.station_id = v_last_station_id THEN
        v_check := 0;
    ELSIF v_check = 1 OR c_stationToCheck.station_id = v_first_station_id  THEN
        v_check := 1;
        SELECT COUNT(*) INTO v_toAdd FROM TICKET INNER JOIN TRAVEL ON TICKET.TRAVEL_ID = TRAVEL.TRAVEL_ID WHERE TRAVEL.TRAVEL_ID = v_travel_id AND TRAVEL.LINE_ID = (SELECT LINE_ID FROM TRAVEL WHERE TRAVEL_ID = v_travel_id) AND START_STATION_ID = c_stationToCheck.station_id;
        v_capacity := v_capacity - v_toAdd;
    END IF;
END LOOP;

RETURN v_capacity;
END;

/
--------------------------------------------------------
--  DDL for Function GETPLATFORM
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "TCHOU"."GETPLATFORM" 
(
v_STATION_ID IN STATION.STATION_ID%type,
  v_TRAIN_ID IN TRAIN.TRAIN_ID%type 
) RETURN NUMBER AS 

CURSOR c_dispo_plat is
     SELECT PLATFORM_LETTER, TERMINAL_ID FROM PLATFORM p, TRAIN t, TRAIN_TYPE ty 
WHERE t.TRAIN_TYPE_ID = ty.TRAIN_TYPE_ID AND ty.TRAIN_LENGTH < p.PLATFORM_LENGTH 
AND PLATFORM_STATUS= 1 AND PLATFORM_UTILISATION=0 AND PLATFORM_USER IS NULL
AND STATION_ID = v_STATION_ID AND t.TRAIN_ID=v_TRAIN_ID ;

v_dispo_plat c_dispo_plat%rowtype;
v_already NUMBER;
BEGIN

select count(*) into v_already from PLATFORM WHERE STATION_ID = v_STATION_ID AND PLATFORM_USER=v_TRAIN_ID;

if v_already>0 then
    RETURN 1;
END IF;

OPEN c_dispo_plat;

FETCH c_dispo_plat INTO v_dispo_plat ;
IF c_dispo_plat%NOTFOUND THEN -- if no result 
    return 0;
    END IF;

Update PLATFORM 
    SET PLATFORM_USER= v_TRAIN_ID
    WHERE STATION_ID = v_STATION_ID AND PLATFORM_LETTER = v_dispo_plat.PLATFORM_LETTER
    AND TERMINAL_ID = v_dispo_plat.TERMINAL_ID;

CLOSE c_dispo_plat;
return 1;



END GETPLATFORM;

/
--------------------------------------------------------
--  DDL for Function GETTIMEARRIVAL
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "TCHOU"."GETTIMEARRIVAL" (
v_line  LINE_STOP.LINE_ID%type,
v_start  DELTA_TIME_STATION.START_STATION_ID%type,
v_end   DELTA_TIME_STATION.END_STATION_ID%type,
v_coef number)
RETURN NUMBER
/* donne la durée entre 2 gare distante*/
as 

v_total_time LINE_STOP.DURATION_TIME%type;

v_ETA  TRAVEL.START_TIME%type;

v_last_stop STATION.STATION_ID%type;

CURSOR c_next_stop is
     select ls.station_id, ls.duration_time from LINE_STOP ls where ls.line_id= v_line ORDER BY ORDER_STOP ASC;

v_next_stop c_next_stop%rowtype;

begin
if v_start = v_end then
return 0;
end if;

OPEN c_next_stop; -- open cursor
LOOP
    FETCH c_next_stop INTO v_next_stop ;
        IF c_next_stop%NOTFOUND THEN -- if no result 

        return null;
        END IF;
        if v_next_stop.station_id = v_start then
            exit;
        end if;
    end loop;
v_total_time := v_next_stop.duration_time;
v_last_stop := v_start;

LOOP
    FETCH c_next_stop INTO v_next_stop ;
    IF c_next_stop%NOTFOUND THEN -- if no result 

        return null;
        END IF;

    --dbms_output.put_line( v_total_time ||';' || v_next_stop.duration_time || ';' || getDTSF(v_last_stop,v_next_stop.station_id) || ';' || v_next_stop.station_id ); 
    --v_total_time := v_total_time + v_next_stop.duration_time;
    -- mouved to after the if

    v_total_time := v_total_time + getDTSF(v_last_stop,v_next_stop.station_id, v_coef);

    v_last_stop := v_next_stop.station_id;
    if v_next_stop.station_id = v_end then
            exit;
        end if;
    v_total_time := v_total_time + v_next_stop.duration_time;

END loop;
CLOSE c_next_stop;

return v_total_time;


EXCEPTION
    WHEN NO_DATA_FOUND THEN
    return null;

/*




select getTimeArrival(100801,1,6) from dual;

set SERVEROUTPUT on;
declare
v_i NUMBER;
begin 
v_i := getTimeArrival(100801,1,8);
end;
*/


end;

/
--------------------------------------------------------
--  DDL for Function GETTIMESTOP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "TCHOU"."GETTIMESTOP" 
(
PLINE_ID IN NUMBER,
  PSTATION_ID IN NUMBER 
) RETURN NUMBER AS 
v_time NUMBER;
BEGIN
    SELECT DURATION_TIME INTO V_TIME FROM LINE_STOP WHERE STATION_ID = PSTATION_ID AND LINE_ID = PLINE_ID;
  RETURN v_time;
END GETTIMESTOP;

/
--------------------------------------------------------
--  DDL for Function GETTRAINPLATOFORM
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "TCHOU"."GETTRAINPLATOFORM" (
v_TRAIN_ID TRAIN.TRAIN_ID%type,
v_STATION_ID STATION.STATION_ID%type)
return VARCHAR2 as
v_res VARCHAR2(1 BYTE) := null;
begin

SELECT PLATFORM_LETTER into v_res FROM PLATFORM 
WHERE PLATFORM_USER  = v_TRAIN_ID
AND STATION_ID = v_STATION_ID;
return v_res;
end;

/
--------------------------------------------------------
--  DDL for Function GETWAGON
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "TCHOU"."GETWAGON" (
v_train  IN NUMBER,
v_place  IN NUMBER)
RETURN NUMBER
/* donne la durée entre 2 gare*/
as 
v_capacity NUMBER := 0;
v_capacity_wagon NUMBER := 0;
v_wagon_number NUMBER := 0;
begin
select TRAIN_CAPACITY into v_capacity from train inner join train_type on train.train_type_id = train_type.train_type_id where train_id = v_train;
v_capacity_wagon := v_capacity/8;
for i in 0..8
LOOP
    if (v_place between v_capacity_wagon*i-1 AND v_capacity_wagon*(i)) then
        v_wagon_number := i;
        return v_wagon_number;
    end if;
end loop;
end;

/
--------------------------------------------------------
--  DDL for Function POPPLATFORM
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "TCHOU"."POPPLATFORM" 
(
v_STATION_ID IN STATION.STATION_ID%type,
  v_TRAIN_ID IN TRAIN.TRAIN_ID%type 
) RETURN NUMBER AS 




v_already NUMBER;
BEGIN

select count(*) into v_already from PLATFORM WHERE STATION_ID = v_STATION_ID AND PLATFORM_USER=v_TRAIN_ID;

if v_already=0 then
    RETURN 1;
END IF;


Update PLATFORM 
    SET PLATFORM_USER= NULL, PLATFORM_UTILISATION=0 
    WHERE STATION_ID = v_STATION_ID AND PLATFORM_USER =v_TRAIN_ID;


return 1;



END POPPLATFORM;




/
--------------------------------------------------------
--  DDL for Function REMOVE_BAD_STATION_UTILISATION
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "TCHOU"."REMOVE_BAD_STATION_UTILISATION" 
return NUMBER
AS 
BEGIN
UPDATE TCHOU.PLATFORM 
SET PLATFORM_UTILISATION = 0,
PLATFORM_USER = NULL
WHERE PLATFORM_USER NOT IN (SELECT t.TRAIN_ID  FROM TCHOU.TRAIN_ETA te, TCHOU.TRAVEL t
WHERE te.TRAVEL_ID = t.TRAVEL_ID AND te.CODE =2  );

RETURN 1;

END;

/
--------------------------------------------------------
--  Constraints for Table USER_CATEGORIE
--------------------------------------------------------

  ALTER TABLE "TCHOU"."USER_CATEGORIE" MODIFY ("USER_CATEGORIE_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."USER_CATEGORIE" MODIFY ("USER_CATEGORIE_LABEL" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."USER_CATEGORIE" ADD CONSTRAINT "PK_USER_CATEGORIE" PRIMARY KEY ("USER_CATEGORIE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ALERT_TYPE
--------------------------------------------------------

  ALTER TABLE "TCHOU"."ALERT_TYPE" MODIFY ("ALERT_TYPE_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."ALERT_TYPE" MODIFY ("ALERT_TYPE_TIME" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."ALERT_TYPE" MODIFY ("ALERT_TYPE_LABEL" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."ALERT_TYPE" ADD CONSTRAINT "PK_ALERT_TYPE" PRIMARY KEY ("ALERT_TYPE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DRIVER_ABILITY
--------------------------------------------------------

  ALTER TABLE "TCHOU"."DRIVER_ABILITY" MODIFY ("DRIVER_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."DRIVER_ABILITY" MODIFY ("TRAIN_TYPE_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."DRIVER_ABILITY" ADD CONSTRAINT "PK_DRIVER_ABILITY" PRIMARY KEY ("DRIVER_ID", "TRAIN_TYPE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MESSAGE
--------------------------------------------------------

  ALTER TABLE "TCHOU"."MESSAGE" MODIFY ("DISCUSSION_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."MESSAGE" MODIFY ("MESSAGE_CONTENT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TRAIN_TYPE
--------------------------------------------------------

  ALTER TABLE "TCHOU"."TRAIN_TYPE" MODIFY ("TRAIN_TYPE_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."TRAIN_TYPE" MODIFY ("TRAIN_TYPE_LABEL" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."TRAIN_TYPE" MODIFY ("TRAIN_CAPACITY" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."TRAIN_TYPE" MODIFY ("TRAIN_SPEED" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."TRAIN_TYPE" MODIFY ("TRAIN_LENGTH" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."TRAIN_TYPE" ADD CONSTRAINT "PK_TRAIN_TYPE" PRIMARY KEY ("TRAIN_TYPE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TICKET
--------------------------------------------------------

  ALTER TABLE "TCHOU"."TICKET" MODIFY ("USER_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."TICKET" MODIFY ("TRAVEL_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."TICKET" MODIFY ("START_STATION_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."TICKET" MODIFY ("END_STATION_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."TICKET" ADD CONSTRAINT "TICKET_PK" PRIMARY KEY ("USER_ID", "TRAVEL_ID", "FIRSTNAME", "LASTNAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "TCHOU"."TICKET" MODIFY ("FIRSTNAME" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."TICKET" MODIFY ("LASTNAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table COMPANY
--------------------------------------------------------

  ALTER TABLE "TCHOU"."COMPANY" MODIFY ("COMPANY_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."COMPANY" MODIFY ("COMPANY_NAME" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."COMPANY" ADD CONSTRAINT "PK_COMPANY" PRIMARY KEY ("COMPANY_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table COUNTRY
--------------------------------------------------------

  ALTER TABLE "TCHOU"."COUNTRY" MODIFY ("COUNTRY_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."COUNTRY" MODIFY ("COUNTRY_NAME" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."COUNTRY" MODIFY ("COUNTRY_LABEL" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."COUNTRY" ADD CONSTRAINT "PK_COUNTRY" PRIMARY KEY ("COUNTRY_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DISCUSSION
--------------------------------------------------------

  ALTER TABLE "TCHOU"."DISCUSSION" MODIFY ("CREATION_TIME" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."DISCUSSION" MODIFY ("DISCUSSION_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."DISCUSSION" MODIFY ("DISCUSSION_SUBJECT" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."DISCUSSION" ADD CONSTRAINT "PK_DISCUSSION" PRIMARY KEY ("DISCUSSION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "TCHOU"."DISCUSSION" MODIFY ("STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TRAVEL
--------------------------------------------------------

  ALTER TABLE "TCHOU"."TRAVEL" MODIFY ("TRAVEL_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."TRAVEL" MODIFY ("LINE_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."TRAVEL" MODIFY ("TRAIN_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."TRAVEL" MODIFY ("DRIVER_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."TRAVEL" ADD CONSTRAINT "PK_TRAVEL" PRIMARY KEY ("TRAVEL_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "TCHOU"."TRAVEL" MODIFY ("START_TIME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLATFORM
--------------------------------------------------------

  ALTER TABLE "TCHOU"."PLATFORM" MODIFY ("PLATFORM_LETTER" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."PLATFORM" MODIFY ("TERMINAL_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."PLATFORM" MODIFY ("STATION_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."PLATFORM" MODIFY ("PLATFORM_LENGTH" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."PLATFORM" ADD CONSTRAINT "CK_PLATFORM_STATUS" CHECK (PLATFORM_STATUS = 1 OR PLATFORM_STATUS = 0) ENABLE;
  ALTER TABLE "TCHOU"."PLATFORM" ADD CONSTRAINT "CK_PLATFORM_UTILISATION" CHECK (PLATFORM_UTILISATION = 1 OR PLATFORM_UTILISATION = 0) ENABLE;
  ALTER TABLE "TCHOU"."PLATFORM" ADD CONSTRAINT "PK_PLATFORM" PRIMARY KEY ("PLATFORM_LETTER", "TERMINAL_ID", "STATION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table STATION
--------------------------------------------------------

  ALTER TABLE "TCHOU"."STATION" MODIFY ("STATION_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."STATION" MODIFY ("CITY_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."STATION" MODIFY ("STATION_NAME" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."STATION" ADD CONSTRAINT "PK_STATION_ID" PRIMARY KEY ("STATION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TRAIN
--------------------------------------------------------

  ALTER TABLE "TCHOU"."TRAIN" MODIFY ("TRAIN_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."TRAIN" MODIFY ("TRAIN_TYPE_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."TRAIN" ADD CONSTRAINT "PK_TRAIN" PRIMARY KEY ("TRAIN_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table LINE
--------------------------------------------------------

  ALTER TABLE "TCHOU"."LINE" MODIFY ("LINE_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."LINE" MODIFY ("START_STATION_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."LINE" MODIFY ("END_STATION_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."LINE" ADD CONSTRAINT "CK_DIFF_START_END" CHECK (START_STATION_ID != END_STATION_ID) ENABLE;
  ALTER TABLE "TCHOU"."LINE" ADD CONSTRAINT "PK_LINE" PRIMARY KEY ("LINE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table LINE_STOP
--------------------------------------------------------

  ALTER TABLE "TCHOU"."LINE_STOP" MODIFY ("LINE_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."LINE_STOP" MODIFY ("STATION_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."LINE_STOP" MODIFY ("ORDER_STOP" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."LINE_STOP" MODIFY ("DURATION_TIME" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."LINE_STOP" ADD CONSTRAINT "PK_LINE_STOP" PRIMARY KEY ("LINE_ID", "ORDER_STOP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table EMPLOYEES_DATA
--------------------------------------------------------

  ALTER TABLE "TCHOU"."EMPLOYEES_DATA" MODIFY ("USER_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."EMPLOYEES_DATA" MODIFY ("EMPLOYEE_ACCESS" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."EMPLOYEES_DATA" ADD CONSTRAINT "PK_EMPLOYEE" PRIMARY KEY ("USER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table REGION
--------------------------------------------------------

  ALTER TABLE "TCHOU"."REGION" MODIFY ("REGION_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."REGION" MODIFY ("COUNTRY_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."REGION" MODIFY ("REGION_NAME" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."REGION" ADD CONSTRAINT "PK_REGION_ID" PRIMARY KEY ("COUNTRY_ID", "REGION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ADVERTISEMENT
--------------------------------------------------------

  ALTER TABLE "TCHOU"."ADVERTISEMENT" MODIFY ("ID_ADD" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."ADVERTISEMENT" MODIFY ("TITLE_ADD" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."ADVERTISEMENT" MODIFY ("DESC_ADD" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."ADVERTISEMENT" ADD CONSTRAINT "ADVERTISEMENT_PK" PRIMARY KEY ("ID_ADD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table EMPLOYEE_CATEGORIE
--------------------------------------------------------

  ALTER TABLE "TCHOU"."EMPLOYEE_CATEGORIE" MODIFY ("EMPLOYEE_CATEGORIE_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."EMPLOYEE_CATEGORIE" MODIFY ("EMPLOYEE_CATEGORIE_LABEL" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."EMPLOYEE_CATEGORIE" ADD CONSTRAINT "PK_EMPLOYEE_CATEGORIE" PRIMARY KEY ("EMPLOYEE_CATEGORIE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DRIVER
--------------------------------------------------------

  ALTER TABLE "TCHOU"."DRIVER" MODIFY ("DRIVER_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."DRIVER" MODIFY ("USER_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."DRIVER" ADD CONSTRAINT "PK_DRIVER" PRIMARY KEY ("DRIVER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "TCHOU"."DRIVER" ADD UNIQUE ("USER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TRAIN_STATUS
--------------------------------------------------------

  ALTER TABLE "TCHOU"."TRAIN_STATUS" MODIFY ("TRAIN_STATUS_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."TRAIN_STATUS" MODIFY ("TRAIN_STATUS_LABEL" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."TRAIN_STATUS" ADD CONSTRAINT "PK_TRAIN_STATUS" PRIMARY KEY ("TRAIN_STATUS_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ALERT
--------------------------------------------------------

  ALTER TABLE "TCHOU"."ALERT" MODIFY ("TRAVEL_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."ALERT" MODIFY ("ALERT_TYPE_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."ALERT" MODIFY ("ALERT_DATE" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."ALERT" MODIFY ("ALERT_MESSAGE" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."ALERT" MODIFY ("ALERT_LOCATION" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."ALERT" MODIFY ("ALERT_STATUS" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."ALERT" ADD CONSTRAINT "PK_ALERT" PRIMARY KEY ("TRAVEL_ID", "ALERT_DATE", "ALERT_TYPE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CITY
--------------------------------------------------------

  ALTER TABLE "TCHOU"."CITY" MODIFY ("CITY_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."CITY" MODIFY ("COUNTRY_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."CITY" MODIFY ("REGION_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."CITY" MODIFY ("CITY_NAME" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."CITY" ADD CONSTRAINT "PK_CITY_ID" PRIMARY KEY ("CITY_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DELTA_TIME_STATION
--------------------------------------------------------

  ALTER TABLE "TCHOU"."DELTA_TIME_STATION" MODIFY ("START_STATION_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."DELTA_TIME_STATION" MODIFY ("END_STATION_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."DELTA_TIME_STATION" MODIFY ("DELTA_TIME" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."DELTA_TIME_STATION" ADD CONSTRAINT "CK_DELTA_TIME" CHECK (DELTA_TIME > 0) ENABLE;
  ALTER TABLE "TCHOU"."DELTA_TIME_STATION" ADD CONSTRAINT "PK_DELTA" PRIMARY KEY ("START_STATION_ID", "END_STATION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "TCHOU"."DELTA_TIME_STATION" MODIFY ("PRICE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TRAIN_ETA
--------------------------------------------------------

  ALTER TABLE "TCHOU"."TRAIN_ETA" ADD CONSTRAINT "PK_TRAIN_ETA" PRIMARY KEY ("TRAVEL_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table USER_DATA
--------------------------------------------------------

  ALTER TABLE "TCHOU"."USER_DATA" MODIFY ("USER_ID" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."USER_DATA" MODIFY ("USER_MAIL" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."USER_DATA" MODIFY ("USER_PASSWORD" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."USER_DATA" MODIFY ("USER_LASTNAME" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."USER_DATA" MODIFY ("USER_FIRSTNAME" NOT NULL ENABLE);
  ALTER TABLE "TCHOU"."USER_DATA" ADD CONSTRAINT "PK_USER" PRIMARY KEY ("USER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ALERT
--------------------------------------------------------

  ALTER TABLE "TCHOU"."ALERT" ADD CONSTRAINT "FK_ALERT_TYPE" FOREIGN KEY ("ALERT_TYPE_ID")
	  REFERENCES "TCHOU"."ALERT_TYPE" ("ALERT_TYPE_ID") ENABLE;
  ALTER TABLE "TCHOU"."ALERT" ADD CONSTRAINT "FK_ALERT_TRAVEL" FOREIGN KEY ("TRAVEL_ID")
	  REFERENCES "TCHOU"."TRAVEL" ("TRAVEL_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CITY
--------------------------------------------------------

  ALTER TABLE "TCHOU"."CITY" ADD CONSTRAINT "FK_CITY_REGION_ID" FOREIGN KEY ("COUNTRY_ID", "REGION_ID")
	  REFERENCES "TCHOU"."REGION" ("COUNTRY_ID", "REGION_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DELTA_TIME_STATION
--------------------------------------------------------

  ALTER TABLE "TCHOU"."DELTA_TIME_STATION" ADD CONSTRAINT "FK_DELTA_START_STATION_ID" FOREIGN KEY ("START_STATION_ID")
	  REFERENCES "TCHOU"."STATION" ("STATION_ID") ENABLE;
  ALTER TABLE "TCHOU"."DELTA_TIME_STATION" ADD CONSTRAINT "FK_DELTA_END_STATION_ID" FOREIGN KEY ("END_STATION_ID")
	  REFERENCES "TCHOU"."STATION" ("STATION_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DISCUSSION
--------------------------------------------------------

  ALTER TABLE "TCHOU"."DISCUSSION" ADD CONSTRAINT "FK_USER_ID" FOREIGN KEY ("USER_ID")
	  REFERENCES "TCHOU"."USER_DATA" ("USER_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DRIVER
--------------------------------------------------------

  ALTER TABLE "TCHOU"."DRIVER" ADD CONSTRAINT "FK_USER" FOREIGN KEY ("USER_ID")
	  REFERENCES "TCHOU"."EMPLOYEES_DATA" ("USER_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DRIVER_ABILITY
--------------------------------------------------------

  ALTER TABLE "TCHOU"."DRIVER_ABILITY" ADD CONSTRAINT "FK_DRIVER_ABILITY_DRIVER_ID" FOREIGN KEY ("DRIVER_ID")
	  REFERENCES "TCHOU"."DRIVER" ("DRIVER_ID") ENABLE;
  ALTER TABLE "TCHOU"."DRIVER_ABILITY" ADD CONSTRAINT "FK_DRIVER_ABILITY_TRAIN_TYPE" FOREIGN KEY ("TRAIN_TYPE_ID")
	  REFERENCES "TCHOU"."TRAIN_TYPE" ("TRAIN_TYPE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EMPLOYEES_DATA
--------------------------------------------------------

  ALTER TABLE "TCHOU"."EMPLOYEES_DATA" ADD CONSTRAINT "FK_EMPLOYEE_USER" FOREIGN KEY ("USER_ID")
	  REFERENCES "TCHOU"."USER_DATA" ("USER_ID") ENABLE;
  ALTER TABLE "TCHOU"."EMPLOYEES_DATA" ADD CONSTRAINT "FK_EMPLOYEE_ACCESS" FOREIGN KEY ("EMPLOYEE_ACCESS")
	  REFERENCES "TCHOU"."EMPLOYEE_CATEGORIE" ("EMPLOYEE_CATEGORIE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table LINE
--------------------------------------------------------

  ALTER TABLE "TCHOU"."LINE" ADD CONSTRAINT "FK_LINE_START_STATION_ID" FOREIGN KEY ("START_STATION_ID")
	  REFERENCES "TCHOU"."STATION" ("STATION_ID") ENABLE;
  ALTER TABLE "TCHOU"."LINE" ADD CONSTRAINT "FK_LINE_END_STATION_ID" FOREIGN KEY ("END_STATION_ID")
	  REFERENCES "TCHOU"."STATION" ("STATION_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table LINE_STOP
--------------------------------------------------------

  ALTER TABLE "TCHOU"."LINE_STOP" ADD CONSTRAINT "FK_LINE_STOP_LINE_ID" FOREIGN KEY ("LINE_ID")
	  REFERENCES "TCHOU"."LINE" ("LINE_ID") ENABLE;
  ALTER TABLE "TCHOU"."LINE_STOP" ADD CONSTRAINT "FK_LINE_STOP_STATION_ID" FOREIGN KEY ("STATION_ID")
	  REFERENCES "TCHOU"."STATION" ("STATION_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MESSAGE
--------------------------------------------------------

  ALTER TABLE "TCHOU"."MESSAGE" ADD CONSTRAINT "FK_USER_DATA" FOREIGN KEY ("SENDER_ID")
	  REFERENCES "TCHOU"."USER_DATA" ("USER_ID") ENABLE;
  ALTER TABLE "TCHOU"."MESSAGE" ADD CONSTRAINT "FK_DISCUSSION_ID" FOREIGN KEY ("DISCUSSION_ID")
	  REFERENCES "TCHOU"."DISCUSSION" ("DISCUSSION_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLATFORM
--------------------------------------------------------

  ALTER TABLE "TCHOU"."PLATFORM" ADD CONSTRAINT "FK_PLATFORM_STATION_ID" FOREIGN KEY ("STATION_ID")
	  REFERENCES "TCHOU"."STATION" ("STATION_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REGION
--------------------------------------------------------

  ALTER TABLE "TCHOU"."REGION" ADD CONSTRAINT "FK_REGION_COUNTRY_ID" FOREIGN KEY ("COUNTRY_ID")
	  REFERENCES "TCHOU"."COUNTRY" ("COUNTRY_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table STATION
--------------------------------------------------------

  ALTER TABLE "TCHOU"."STATION" ADD CONSTRAINT "FK_STATION_CITY_ID" FOREIGN KEY ("CITY_ID")
	  REFERENCES "TCHOU"."CITY" ("CITY_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TICKET
--------------------------------------------------------

  ALTER TABLE "TCHOU"."TICKET" ADD CONSTRAINT "FK_TICKET_USER" FOREIGN KEY ("USER_ID")
	  REFERENCES "TCHOU"."USER_DATA" ("USER_ID") ENABLE;
  ALTER TABLE "TCHOU"."TICKET" ADD CONSTRAINT "FK_TICKET_TRAVEL" FOREIGN KEY ("TRAVEL_ID")
	  REFERENCES "TCHOU"."TRAVEL" ("TRAVEL_ID") ENABLE;
  ALTER TABLE "TCHOU"."TICKET" ADD CONSTRAINT "FK_TICKET_START_STATION_ID" FOREIGN KEY ("START_STATION_ID")
	  REFERENCES "TCHOU"."STATION" ("STATION_ID") ENABLE;
  ALTER TABLE "TCHOU"."TICKET" ADD CONSTRAINT "FK_TICKET_END_STATION_ID" FOREIGN KEY ("END_STATION_ID")
	  REFERENCES "TCHOU"."STATION" ("STATION_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TRAIN
--------------------------------------------------------

  ALTER TABLE "TCHOU"."TRAIN" ADD CONSTRAINT "FK_TRAIN_TYPE" FOREIGN KEY ("TRAIN_TYPE_ID")
	  REFERENCES "TCHOU"."TRAIN_TYPE" ("TRAIN_TYPE_ID") ENABLE;
  ALTER TABLE "TCHOU"."TRAIN" ADD CONSTRAINT "FK_TRAIN_STATUS" FOREIGN KEY ("TRAIN_STATUS_ID")
	  REFERENCES "TCHOU"."TRAIN_STATUS" ("TRAIN_STATUS_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TRAIN_ETA
--------------------------------------------------------

  ALTER TABLE "TCHOU"."TRAIN_ETA" ADD CONSTRAINT "FK_STATION" FOREIGN KEY ("TO_SATION")
	  REFERENCES "TCHOU"."STATION" ("STATION_ID") ENABLE;
  ALTER TABLE "TCHOU"."TRAIN_ETA" ADD CONSTRAINT "FK_TRAVEL" FOREIGN KEY ("TRAVEL_ID")
	  REFERENCES "TCHOU"."TRAVEL" ("TRAVEL_ID") ENABLE;
  ALTER TABLE "TCHOU"."TRAIN_ETA" ADD CONSTRAINT "FK_STATUS" FOREIGN KEY ("CODE")
	  REFERENCES "TCHOU"."TRAIN_STATUS" ("TRAIN_STATUS_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TRAVEL
--------------------------------------------------------

  ALTER TABLE "TCHOU"."TRAVEL" ADD CONSTRAINT "FK_TRAVEL_LINE" FOREIGN KEY ("LINE_ID")
	  REFERENCES "TCHOU"."LINE" ("LINE_ID") ENABLE;
  ALTER TABLE "TCHOU"."TRAVEL" ADD CONSTRAINT "FK_TRAVEL_TRAIN_ID" FOREIGN KEY ("TRAIN_ID")
	  REFERENCES "TCHOU"."TRAIN" ("TRAIN_ID") ENABLE;
  ALTER TABLE "TCHOU"."TRAVEL" ADD CONSTRAINT "FK_TRAVEL_DRIVER" FOREIGN KEY ("DRIVER_ID")
	  REFERENCES "TCHOU"."DRIVER" ("DRIVER_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table USER_DATA
--------------------------------------------------------

  ALTER TABLE "TCHOU"."USER_DATA" ADD CONSTRAINT "FK_USER_CATEGORIE" FOREIGN KEY ("USER_CATEGORIE_ID")
	  REFERENCES "TCHOU"."USER_CATEGORIE" ("USER_CATEGORIE_ID") ENABLE;
